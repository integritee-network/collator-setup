# HTTPS server
#
server {
  listen {{ proxy_wss_port }} ssl;
#  fixme: ipv6 gives invalid host currently
# listen [::}:{{ proxy_wss_port }} ssl ipv6only=on;

  server_name {{ main_domain_name }};

  location / {
    try_files $uri $uri/ =404;

    proxy_pass http://localhost:{{ relaychain_ws_port }};
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

# Todo: enable when we have figured out how to handle domain
#
#  ssl_certificate         /etc/letsencrypt/live/{{ main_domain_name }}/fullchain.pem;
#  ssl_certificate_key     /etc/letsencrypt/live/{{ main_domain_name }}/privkey.pem;
#  ssl_trusted_certificate /etc/letsencrypt/live/{{ main_domain_name }}/fullchain.pem;
#  ssl_stapling on;
#  ssl_stapling_verify on;

  ssl_certificate       {{ self_signed_certs.0.cert }};
  ssl_certificate_key   {{ self_signed_certs.0.key }};

  # config values taken from: https://wiki.polkadot.network/docs/maintain-wss
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 1440m;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";
  ssl_dhparam /etc/nginx/dhparams.pem;
  ssl_prefer_server_ciphers on;
}
